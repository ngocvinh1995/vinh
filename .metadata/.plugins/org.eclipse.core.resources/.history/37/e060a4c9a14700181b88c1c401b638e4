package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.demo.entities.Student;
import com.example.demo.service.KhoaHocService;
import com.example.demo.service.StudentService;

@Controller
public class StudentController {

	@Autowired
	private StudentService studentService;
	
	@Autowired KhoaHocService khoahocService;
	@RequestMapping(value= {"/", "/student-list"})
	public String listStudent(Model model) {
		model.addAttribute("listStudent", studentService.findAll());
			
		return "student-list";
		
	}
	
	@RequestMapping("/student-save")
	public String insertStudent(Model model) {
		model.addAttribute("student" , new Student());
		return "student-save";
	}
	
	 @RequestMapping("/student-view/{MaSV}")
	  public String viewStudent(@PathVariable int id, Model model ) {
	    Student student = studentService.findById(id);
	    model.addAttribute("student", student); 
	    return "student-view";
	  }
	  
	  @RequestMapping("/student-update/{MaSV}")
	  public String updateStudent(@PathVariable int id, Model model ) {
	    Student student = studentService.findById(id);
	    model.addAttribute("student", student);
	    return "student-update";
	  }
	  @RequestMapping("/saveStudent")
	  public String doSaveStudent(@ModelAttribute("Student") Student student, Model model) {
	    studentService.save(student);
	    model.addAttribute("listStudent", studentService.findAll());
	    return "redirect:student-list";
	  }

	  @RequestMapping("/updateStudent")
	  public String doUpdateStudent(@ModelAttribute("Student") Student student, Model model) {
		  studentService.update(student);
	    model.addAttribute("listStudent", studentService.findAll());
	    return "redirect:student-list";
	  }

	  @RequestMapping("/studentDelete/{id}")
	  public String doDeleteStudent(@PathVariable int id, Model model) {
		  studentService.delete(id);
	    model.addAttribute("listStudent", studentService.findAll());
	    return "redirect:/student-list";
	  }
	
}
